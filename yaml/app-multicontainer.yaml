apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "31"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"generation":1,"labels":{"app":"go"},"name":"go-demo","namespace":"default"},"spec":{"progressDeadlineSeconds":600,"replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"go"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"go"}},"spec":{"automountServiceAccountToken":true,"containers":[{"image":"europe-central2-docker.pkg.dev/ethereal-runner-417315/dc-docker-repo/demo_app:production","imagePullPolicy":"Always","name":"dchernenko-demo-app","ports":[{"containerPort":8088,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"shareProcessNamespace":false,"terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":3,"observedGeneration":1,"readyReplicas":3,"replicas":3,"updatedReplicas":3}}
  creationTimestamp: "2024-03-16T20:43:25Z"
  generation: 37
  labels:
    app: go
  name: go-demo
  namespace: default
  resourceVersion: "17245106"
  uid: 4d6555be-2795-40ca-86ad-b56efc7603c4
spec:
  progressDeadlineSeconds: 600
  replicas: 5
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: go
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: go
    spec:
      automountServiceAccountToken: true
      containers:
      - name: dchernenko-demo-app
        image: europe-central2-docker.pkg.dev/ethereal-runner-417315/dc-docker-repo/demo_app:production
        imagePullPolicy: Always
        ports:
        - containerPort: 8088
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - name: elasticsearch
        image: elasticsearch:7.9.0
        ports:
          - containerPort: 9200
            name: rest
            protocol: TCP
          - containerPort: 9300
            name: inter-node
            protocol: TCP
        volumeMounts:
          - name: elasticsearch-data
            mountPath: /usr/share/elasticsearch/data
        resources:
          requests:
            memory: 1Gi
            cpu: 1
          limits:
            memory: 1Gi
            cpu: 1
      - name: logstash
        image: logstash:7.9.0
        ports:
          - containerPort: 5044
            name: beats
            protocol: TCP
        volumeMounts:
          - name: logstash-pipeline
            mountPath: /usr/share/logstash/pipeline/logstash.conf
            subPath: logstash.conf
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 200m
      - name: kibana
        image: kibana:7.9.0
        ports:
          - containerPort: 5601
            name: http
            protocol: TCP
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 200m
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data
        - name: logstash-pipeline
          configMap:
            name: logstash-config
            items:
            - key: logstash.conf
              path: logstash.conf
